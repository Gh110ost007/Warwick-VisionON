#!/usr/bin/env bash

venv="vcwk"
vserver=flask_${venv:1}.py
vindex=index_${venv:1}.html
vname="Coursework Example"

# add the pip config to make installation go into the virtual environment
# make ~/.pip if doesn't exist
mkdir -p ~/.pip 
pushd ~/.pip > /dev/null

# create pip.conf if doesn't exist
# and use it to add [install] option to pip so that files are not put into the user space
touch pip.conf
if test ! -f "$HOME/.pip/pip.conf" || ! grep -q "[install]" "$HOME/.pip/pip.conf"; then
    echo Creating ~/.pip/pip.conf
    ( cat <<'EOF'
[install]
user = false
EOF
    ) >> pip.conf
fi
popd > /dev/null

# Default port value
port="5${USER: -4}"

# Loop through the arguments
for arg in "$@"
do
  case $arg in
    --port)
    port="$2"
    shift 2
    ;;
    --port=*)
    port="${arg#*=}"
    shift
    ;;
  esac
done

# add the FLASK RUN PORT to .env if it doesn't alrady exist
if test ! -f ".env" || ! grep -q FLASK_RUN_PORT ".env"; then
    echo Creating .env

    echo FLASK_RUN_PORT=${port} >> .env
fi

# add templates folder and static files
if ! [[ -f requirements.txt ]]; then
    echo Create requirements.txt
    ( cat <<'EOF'
Flask-Login==0.6.3
Flask-SQLAlchemy==3.1.1
python-dotenv==1.0.1
python-barcode==0.15.1
qrcode[pil]==8.0
Flask-Mail==0.10.0
Flask-WTF==1.2.2

EOF
    ) >> requirements.txt
fi

# add virtual environment if it doesn't already exist
if ! [[ -d ${venv} ]]; then
    echo Adding virtual environment 
    python3 -m venv ${venv}
    source ${venv}/bin/activate
    echo Setting up Flask requirements
    pip install -r requirements.txt
    deactivate
fi

# add templates folder and static files
if ! [[ -d templates ]]; 
then
    echo Create templates folder 
    mkdir templates
fi
if ! [[ -e templates/index.html ]];
then
    echo Create templates/index.html
    ( cat << EOF
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>$vname</title>
    </head>
    <body>
        <h1>CS139 Web Development Technologies Coursework</h1>
        <p>This is a placeholder <code>index.html</code> file.  You will replace this file with your own home page. </p>
        <p>These two files are also display
        for your information.</p>
        <h2>README.md</h2>
        <p>Submit your own <code>README.md</code></p>
        <pre>{{README}}</pre>
        <h2>requirements.txt (generated by <code>start.sh</code>)</h2>
        <ul>
        <li><p>Do not change <code>start.sh</code>.</p></li>
        <li><p>Do not submit <code>requirements.txt</code>.</p></li>
        </ul>
        <pre>{{requirements}}</pre>
    </body>
</html>
EOF
    ) >> templates/index.html
fi

# add templates folder and static files
if ! [[ -e app.py ]]; then
    echo Create app.py
    ( cat << EOF
from flask import Flask, render_template
app = Flask(__name__)

#route to the index
@app.route('/')
def index():
    with open('README.md') as readme:
      with open('requirements.txt') as req:
        return render_template('index.html', README=readme.read(), requirements=req.read())

EOF
    ) >> app.py
fi


if ! [[ -e flask-server.sh ]]; then
    echo Create flask-server.sh
    ( cat << EOF
# activate the virtual environment for the lab
source ${venv}/bin/activate

echo Running Flask

if ! [[ -z \$1 ]]; then
    flask --app \$1 run --debug
else
    flask run --debug
fi
EOF
    ) >> flask-server.sh
    chmod u+x flask-server.sh
fi


echo 
echo Installation complete.  To test the installation run
echo "    ./flask-server.sh"
echo and visit
echo "   http://127.0.0.1:"${port}

echo To activate the python virtual environment run
echo "   source ${venv}/bin/activate"

